name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure poetry
        run: |
          python -m pip install --upgrade pip && python -m pip install poetry
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Format with ruff
        run: poetry run ruff format . --check --diff

      - name: Lint with ruff
        run: poetry run ruff check . --output-format=github

      - name: Build distribution and verify metadata
        run: |
          python -m pip install --upgrade build twine
          python -m build
          python -m twine check dist/*
          python - <<'PY'
            import zipfile,glob,sys
            whl = sorted(glob.glob('dist/*.whl'))[-1]
            with zipfile.ZipFile(whl) as z:
                assert any(p.endswith('appdaemon_aegis/py.typed') for p in z.namelist()), "py.typed missing in wheel"
            print("OK: py.typed present in wheel")
          PY
